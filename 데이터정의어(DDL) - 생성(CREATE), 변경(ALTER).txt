
데이터를 저장하려면 먼저 데이터를 저장할 테이블의 구조를 만들어야 한다.
SQL의 데이터 정의어(DDL)는 바로 이 구조를 만드는 명령이다.
테이블 구조를 만드는 CREATE문, 구조를 변경하는 ALTER문, 구조를 삭제하는 DROP문이 있다.

/* CREATE

CREATE문은 테이블을 구성하고, 속성과 속성에 관한 제약 그리고 기본키 및 외래키를 정의하는 명령이다.

-------------------------------------------------------------------------------------------------------------
CREATE TABLE 테이블이름
	( {속성이름 데이터타입
	   [ NULL | NOT NULL | UNIQUE | DEFAULT 기본값 | CHECK 체크조건 ]
	  }
	   [ PRIMARY KEY 속성이름(들) ]
	   {[ FOREIGN KEY 속성이름 REFERENCES 테이블이름(속성이름)]
			[ ON DELETE { CASCADE | SET NULL } ]
               }
	)
-------------------------------------------------------------------------------------------------------------
대문자 - 키워드
{ } - 안의 내용은 반복가능
[ ] - 선택적으로 사용
 |  - 1개를 선택
<> - 해당되는 문법 사항이 있음
NOT NULL - NULL을 허용하지 않는 제약
UNIQUE - 유일한 값에 대한 제약
DEFAULT - 기본 값 설정
CHECK - 값에 대한 조건 부여
PRIMARY KEY - 기본키 정할 때
FOREIGN KEY - 외래키 정할 때
ON DELETE - 투플의 삭제 시 외래키 속성에 대한 동작 ( CASCADE: 관련된거 전부삭제, SET NULL: 삭제한 부분 NULL로 대체 )

/* 문자형 데이터 타입 - CHAR, VARCHAR, VARCHAR2의 차이

CHAR(n)은 n바이트를 가진 문자형 타입. 저장되는 문자의 길이가 n보다 작으면 나머지는 공백으로 채워서 n바이트를 만들어 저장.
VARCHAR2(n) 타입은 마찬가지로 n바이트를 가진 문자형타입이지만, 저장되는 문자의 길이만큼 기억장소를 차지하는 가변형이다.
VARCHAR(n) 타입은 VARCHAR2(n) 타입과 같지만 미래에 다른 용도로 사용하기 위하여 사용자에게 VARCHAR2(n) 사용을 권함.
CHAR(n)에 저장된 값과 VARCHAR2(n)에 저장된 값이 비록 같을지라도 CHAR(n)은 공백을 채운 문자열이라 동등 비교시 실패할 수 있음.

*/

기본키를 지정해 줄 때, 주의할 것.
-> 기본키를 이루는 컬럼이 복수일순 있어도, 기본키는 복수일 수 없다.
-> 기본키는 NOT NULL 속성만 가능하다.

CREATE TABLE 테이블명(
	컬럼1 NUMBER PRIMARY KEY,
	컬럼2 NUMBER PRIMARY KEY,         ==========> (X) 잘못된 예
); 

CREATE TABLE 테이블명(
	컬럼1 NUMBER NOT NULL,
	컬림2 VARCHAR2(20) NOT NULL,     ==========> (O) 올바른 예
	PRIMARY KEY(컬림1, 컬럼2)
);

*/

/* ALTER

ALTER문은 생성된 테이블의 속성과 속성에 관한 제약 그리고 기본키 및 외래키를 변경한다. 

-------------------------------------------------------------------------------------------------------------
ALTER TABLE 테이블이름
	[ ADD 속성이름 데이터타입 ]
	[ DROP COLUMN 속성이름 ]
	[ MODIFY 속성이름 데이터타입 ]
	[ MODIFY 속성이름 데이터타입 [ NULL | NOT NULL ] ]
	[ ADD PRIMARY KEY(속성이름) ]
	[ [ ADD | DROP ] 제약이름 ] 
-------------------------------------------------------------------------------------------------------------
ADD, DROP은 속성을 추가하거나 제거할 때 사용하고 MODIFY는 속성을 변경할 때 사용한다.
ADD <제약이름>, DROP <제약이름>은 제약사항을 추가하거나 삭제할 때 사용한다.

*/

/* DROP

DROP문은 테이블을 삭제하는 명령이다. 
DROP문은 테이블의 구조와 데이터를 모두 삭제하므로 사용에 주의해야 한다.
데이터만 삭제하려면 DELETE 문을 사용한다.

-------------------------------------------------------------------------------------------------------------
DROP TABLE 테이블이름
-------------------------------------------------------------------------------------------------------------

NewCustomer 테이블과 NewOrders 테이블을 삭제해보자.
NewOrders는 NewCustomer 테이블을 참조하고있다. 
NewCustomer를 삭제하려하면 막힐것이다. NewOrders를 먼저 삭제한 후, NewCustomer를 삭제한다.

*/