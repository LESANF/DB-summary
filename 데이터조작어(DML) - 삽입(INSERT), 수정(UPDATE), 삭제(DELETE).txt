지금 까지 SELECT 문을 사용하여 검색하는 방법과 CREATE 문을 사용하여 테이블의 구조를 만드는 방법을 정리함.
만들어진 테이블에 투플(행/row)을 삽입, 삭제, 수정하는 방법을 정리할거임.

/* INSERT 

-------------------------------------------------------------------------------------------------------------
INSERT INTO 테이블이름[(속성리스트)]
	VALUES (값리스트);
-------------------------------------------------------------------------------------------------------------

속성의 이름들은 생략할 수 있음. 하지만 데이터의 입력 순서는 속성의 순서와 일치해야함.
데이터는 항상 속성의 순서대로 입력하지 않아도 된다. price를 publisher 앞에 입력하고 싶다면 속성의 이름과 데이터 순서를 바꾸면됨.
만약 몇개의 속성만 입력해야 한다면, 해당되는 속성만 명시하면 됨.
ex) bookid, bookname, publisher만 입력해야 한다면 
-> INSERT INTO Book(bookid, bookname, publisher) VALUES (14, '스포츠 의학', '한솔의학서적'); 
price 부분은 NULL로 채워짐.

INSERT 문은 SELECT 문을 사용하여 작성할 수도 있다. 이는 한꺼번에 여러 개의 투플을 삽입하는 방법으로
대량 삽입(Bulk insert)이라고도 한다.
Imported_book 이라는 테이블에 저장된 데이터를 읽어서 Book 테이블에 삽입하려면,
Book 테이블의 타입과 같은 타입의 데이터가 저장되어 있어야 한다. 

INSERT INTO Book(bookid, bookname, publisher, price)
          SELECT bookid, bookname, publisher, price
          FROM Imported_book;

속성의 순서 맞춰야함.

*/

/* UPDATE

-------------------------------------------------------------------------------------------------------------
UPDATE 테이블이름
SET 속성이름1 = 값1[, 속성이름2 = 값2, ...]
[WHERE <검색조건>];
-------------------------------------------------------------------------------------------------------------

UPDATE 문은 다른 테이블의 속성 값을 이용할 수도 있다.
Customer 테이블의 박세리 고객의 주소를 김연아 고객의 주소로 바꿀 수 있다.

UPDATE Customer 
SET address = (SELECT address
                    FROM Customer
                    WHERE name='김연아')
WHERE name LIKE '박세리';

WHERE의 검색조건을 주의하지 않으면, 의도치 않은 값이 UPDATE될 수 도 있다.

*/

/* DELETE

-------------------------------------------------------------------------------------------------------------
DELETE FROM 테이블이름
[WHERE 검색조건];
-------------------------------------------------------------------------------------------------------------

DELETE 문은 <검색조건>에 해당되는 투플을 삭제한다. <검색조건>이 없으면 모든 투플을 삭제한다.
-> DELETE FROM 테이블이름

외래키로 참조된경우는 삭제가 거부됨. 제약을 풀어야 삭제가 가능함.

/* COMMIT, ROLLBACK

우리가 적용한 INSERT, DELETE, UPDATE는 최종적으로 COMMIT을 하지않으면 실제로 데이터베이스에 반영되지 않는다.
DELETE FROM Customer WHERE custid=5; 로 삭제하면 이건 임시로 삭제되는거임.
ROLLBACK; 을 실행시키면 다시 삭제된 투플이 살아난다. 하지만 COMMIT; 을 실행시키면 되돌아오지 않음.

*/


*/